// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Orders.Api.Models;

namespace ThAmCo.Orders.Api.Migrations
{
    [DbContext(typeof(OrdersContext))]
    [Migration("20211207133559_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ThAmCo.Orders.Api.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 1
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 3
                        });
                });

            modelBuilder.Entity("ThAmCo.Orders.Api.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.HasIndex("OrderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            OrderId = 1,
                            Price = 9.9900000000000002,
                            Title = "Test Product 1"
                        },
                        new
                        {
                            ProductId = 2,
                            OrderId = 2,
                            Price = 9.9900000000000002,
                            Title = "Test Product 1"
                        },
                        new
                        {
                            ProductId = 3,
                            OrderId = 2,
                            Price = 4.9900000000000002,
                            Title = "Test Product 2"
                        },
                        new
                        {
                            ProductId = 4,
                            OrderId = 3,
                            Price = 2.9900000000000002,
                            Title = "Test Product 3"
                        },
                        new
                        {
                            ProductId = 5,
                            OrderId = 3,
                            Price = 3.9900000000000002,
                            Title = "Test Product 4"
                        },
                        new
                        {
                            ProductId = 6,
                            OrderId = 3,
                            Price = 4.5,
                            Title = "Test Product 5"
                        });
                });

            modelBuilder.Entity("ThAmCo.Orders.Api.Models.Product", b =>
                {
                    b.HasOne("ThAmCo.Orders.Api.Models.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
